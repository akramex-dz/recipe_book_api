type Recipe @node {
  id: ID! @id
  title: String!
  description: String
  difficulty: String!
  time: Int!
  ingredients: [Ingredient!]! @relationship(type: "HAS_INGREDIENT", direction: OUT)
  category: Category @relationship(type: "BELONGS_TO", direction: OUT)
  createdBy: User @relationship(type: "CREATED", direction: OUT)
}

type Ingredient @node {
  id: ID! @id
  name: String!
  recipes: [Recipe!]! @relationship(type: "HAS_INGREDIENT", direction: IN)
}

type Category @node {
  id: ID! @id
  name: String!
  recipes: [Recipe!]! @relationship(type: "BELONGS_TO", direction: IN)
}

type User @node {
  id: ID! @id
  username: String!
  email: String!
  password: String! @private
  recipes: [Recipe!]! @relationship(type: "CREATED", direction: OUT)
}

# Query Operations (Read)
type Query {
  getRecipes: [Recipe!]!
  getRecipeById(id: ID!): Recipe
  getRecipesByUserId(userId: ID!): [Recipe!]!
  searchRecipes(query: String!): [Recipe!]!
  getMyRecipes: [Recipe!]!
  getIngredients: [Ingredient]
  getIngredientById(id: ID!): Ingredient
  searchIngredients(query: String!): [Ingredient!]!
  getCategoryById(id: ID!): Category
  getUsers: [User!]!
  getUserById(id: ID!): User
  getUserInformation: User
}

type responseUser {
  token: String
  user: User
}

# Mutation Operations (Write)
type Mutation {
  createRecipe(
    title: String!
    description: String
    difficulty: String
    time: Int
    ingredients: [String!]!
    category: String!
  ): Recipe

  updateRecipe(
    id: ID!
    title: String
    description: String
    difficulty: String
    time: Int
    ingredients: [String!]
    category: String
  ): Recipe

  deleteRecipe(id: ID!): Boolean

  createIngredient(
    name: String!
  ): Ingredient

  updateIngredient(id: ID!, name: String!): Ingredient
  deleteIngredient(id: ID!): Boolean

  createCategory(
    name: String!
  ): Category

  updateCategory(id: ID!, name: String!): Category

  deleteCategory(id: ID!): Boolean

  registerUser(
    username: String!
    email: String!
    password: String!
  ): responseUser
  createUser(username: String!): User
  updateUser(id: ID!, username: String!): User
  deleteUser(id: ID!): Boolean
  loginUser(email: String!, password: String!): responseUser

}
